name: Set branch protection rules

on:
  workflow_dispatch:

jobs:
  # get-repos:
  #   name: Get repositories
  #   runs-on: ubuntu-20.04
  #   outputs:
  #     repos: ${{ steps.repos.outputs.result }}

  #   steps:
  #     - uses: actions/github-script@v2
  #       id: repos
  #       with:
  #         github-token: ${{ secrets.OSOME_BOT_TOKEN }}
  #         script: |
  #           const {data: repos} = await github.repos.listForOrg({ org: 'OsomePteLtd' });
  #           return repos.map(repo => repo.name);

  update-branch-protection:
    name: Update branch protection
    runs-on: ubuntu-20.04

    # needs:
    #   - get-repos

    # strategy:
    #   matrix:
    #     stage: ${{ fromJson(needs.get-repos.outputs.repos) }}

    steps:
      - uses: actions/github-script@v2
        with:
          github-token: ${{ secrets.OSOME_BOT_TOKEN }}
          script: |
            // Branch protection
            github.repos.updateBranchProtection({
              owner: 'OsomePteLtd',
              repo: 'adminsome', // ${{ matrix.repo }},
              branch: 'master',
              required_status_checks: {
                strict: true,
                contexts: []
              },
              enforce_admins: false,
              restrictions: null,
              required_pull_request_reviews: {
                require_code_owner_reviews: true,
                required_approving_review_count: 1,
              },
              required_linear_history: true,
              allow_force_pushes: false,
              allow_deletions: false,
              mediaType: {
                previews: ['luke-cage'],
              },
            });
